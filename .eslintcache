[{"/Users/jarredbaker/Desktop/repl/repl-web/src/App.js":"1","/Users/jarredbaker/Desktop/repl/repl-web/src/reportWebVitals.js":"2","/Users/jarredbaker/Desktop/repl/repl-web/src/pages/Auth/Login.js":"3","/Users/jarredbaker/Desktop/repl/repl-web/src/Utilities/Routing/PrivateRoute.js":"4","/Users/jarredbaker/Desktop/repl/repl-web/src/Utilities/context/auth.js":"5","/Users/jarredbaker/Desktop/repl/repl-web/src/Utilities/Hooks/useInput.js":"6","/Users/jarredbaker/Desktop/repl/repl-web/src/Utilities/Header/Header.js":"7","/Users/jarredbaker/Desktop/repl/repl-web/src/pages/Discover/Discover.js":"8","/Users/jarredbaker/Desktop/repl/repl-web/src/pages/MyRecipe/MyRecipe.js":"9","/Users/jarredbaker/Desktop/repl/repl-web/src/index.js":"10"},{"size":1028,"mtime":1606692743851,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1606142547607,"results":"13","hashOfConfig":"12"},{"size":3782,"mtime":1606718312613,"results":"14","hashOfConfig":"12"},{"size":449,"mtime":1606229204886,"results":"15","hashOfConfig":"12"},{"size":160,"mtime":1606229073417,"results":"16","hashOfConfig":"12"},{"size":308,"mtime":1606224412614,"results":"17","hashOfConfig":"12"},{"size":861,"mtime":1606652721885,"results":"18","hashOfConfig":"12"},{"size":6118,"mtime":1606692501435,"results":"19","hashOfConfig":"12"},{"size":3465,"mtime":1606692184583,"results":"20","hashOfConfig":"12"},{"size":500,"mtime":1606142547602,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1urjmkw",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/jarredbaker/Desktop/repl/repl-web/src/App.js",["49"],"/Users/jarredbaker/Desktop/repl/repl-web/src/reportWebVitals.js",[],["50","51"],"/Users/jarredbaker/Desktop/repl/repl-web/src/pages/Auth/Login.js",["52"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"../../App.css\";\nimport axios from \"axios\";\n\nimport { useAuth } from \"../../Utilities/context/auth\";\nimport { useInput } from \"../../Utilities/Hooks/useInput\";\nimport globalStyles from \"../../css/global.module.css\";\nimport authStyles from \"../../css/auth.module.css\";\n\nfunction Login() {\n  const { value: email, bind: bindEmail, reset: resetEmail } = useInput(\"\");\n  const {\n    value: password,\n    bind: bindPassword,\n    reset: resetPassword,\n  } = useInput(\"\");\n\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { setAuthTokens } = useAuth();\n  const [error, setError] = useState(\"\");\n\n  const handleLogin = (evt) => {\n    evt.preventDefault();\n    axios\n      .post(\"http://localhost:8080/users/authenticate\", {\n        username: email,\n        password: password,\n      })\n      .then((result) => {\n        if (result.status === 200) {\n          setAuthTokens(result.data.token);\n          setLoggedIn(true);\n        } else {\n          setIsError(true);\n        }\n      })\n      .catch((e) => {\n        setError(\"Server maintinance, Please try again later.\");\n        setIsError(true);\n      });\n\n    resetEmail();\n    resetPassword();\n  };\n\n  const handleSignUp = (evt) => {\n    evt.preventDefault();\n    axios\n      .post(\"http://localhost:8080/users/register\", {\n        username: email,\n        password: password,\n      })\n      .then((result) => {\n        if (result.status === 200) {\n          setAuthTokens(result.data.token);\n          setLoggedIn(true);\n        } else {\n          setIsError(true);\n        }\n      })\n      .catch((e) => {\n        setError(\"Server maintinance, Please try again later.\");\n        setIsError(true);\n      });\n\n    resetEmail();\n    resetPassword();\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  function removeError() {\n    setIsError(false);\n    setError(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-container\">\n        <header className=\"App-header\">\n          <form>\n            <p className={globalStyles.largeHeader}> Welcome to my recipe! </p>\n            <p className={globalStyles.smallHeaderV2}>please login below</p>\n            <div className={authStyles.authBox}>\n              {isError ? (\n                <div className={authStyles.errorBox}>\n                  <p className={authStyles.errorMessage}>\n                    {error}\n                    <button\n                      className={authStyles.dismissErrBut}\n                      onClick={removeError}\n                    >\n                      X\n                    </button>\n                  </p>\n                </div>\n              ) : (\n                <></>\n              )}\n              <input\n                type=\"text\"\n                name=\"text\"\n                {...bindEmail}\n                className={authStyles.authInput}\n                placeholder=\"email\"\n              ></input>\n              <input\n                type=\"password\"\n                name=\"password\"\n                {...bindPassword}\n                className={authStyles.authInput}\n                placeholder=\"password\"\n              />\n              <button\n                type=\"button\"\n                onClick={handleLogin}\n                className={authStyles.authInputButton}\n              >\n                Login\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleSignUp}\n                className={authStyles.authInputButton}\n              >\n                Sign Up\n              </button>\n            </div>\n          </form>\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n",["53","54"],"/Users/jarredbaker/Desktop/repl/repl-web/src/Utilities/Routing/PrivateRoute.js",[],"/Users/jarredbaker/Desktop/repl/repl-web/src/Utilities/context/auth.js",[],["55","56"],"/Users/jarredbaker/Desktop/repl/repl-web/src/Utilities/Hooks/useInput.js",[],"/Users/jarredbaker/Desktop/repl/repl-web/src/Utilities/Header/Header.js",["57"],"import React, { useState, useEffect } from \"react\";\nimport {NavLink, Redirect} from \"react-router-dom\";\n\nimport headerStyles from '../../css/header.module.css';\nimport { useAuth } from \"../../Utilities/context/auth\";\n\nfunction Header() {\n  const { setAuthTokens } = useAuth();\n  const [logginOut, setlogginOut] = useState(false);\n\n  function logOut() {\n    setAuthTokens(\"\");\n    setlogginOut(true);\n  }\n\n  if (logginOut) {\n    return <Redirect to=\"/auth\" />;\n  }\n  \n  return (\n    <div className={headerStyles.navBar}>\n      <p className={headerStyles.navHeader}>My Recipe</p>\n      <NavLink to=\"/\" className={headerStyles.navItem}>Discover</NavLink>\n      <NavLink to=\"/my-recipes\" className={headerStyles.navItem}>My Recipies</NavLink>\n      <button onClick={logOut} className={headerStyles.navItem}>Logout</button>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/jarredbaker/Desktop/repl/repl-web/src/pages/Discover/Discover.js",["58","59"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"../../Utilities/Header/Header\";\nimport axios from \"axios\";\nimport { useInput } from \"../../Utilities/Hooks/useInput\";\n\nimport recipeStyles from \"../../css/recipe.module.css\";\n\nfunction Discover() {\n  const [meal, setMeal] = useState();\n  const [meals, setMeals] = useState();\n  const { value: search, bind: bindSearch, reset: resetSearch } = useInput(\"\");\n\n  function searchForMeals() {\n    axios\n      .get(\"https://www.themealdb.com/api/json/v1/1/search.php?\", {\n        params: { s: search },\n      })\n      .then((result) => {\n        if (result.status === 200) {\n          setMeals(result.data.meals);\n        }\n      })\n      .catch((e) => {\n        // setIsError(true);\n      });\n  }\n\n  const getMeals = () => {\n    axios\n      .get(\"https://www.themealdb.com/api/json/v1/1/search.php?f=b\")\n      .then((result) => {\n        if (result.status === 200) {\n          setMeals(result.data.meals);\n        }\n      })\n      .catch((e) => {\n        // setIsError(true);\n      });\n  };\n\n  function SaveMeal() {\n    let token = localStorage.getItem(\"tokens\");\n    token = token.slice(1, -1);\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n\n    let measurements = [];\n    let mCount = 1;\n    let ingredients = [];\n    let iCount = 1;\n    let sendMeal = meal[0];\n\n    // maps mesurments and ingredients to arrays\n    Object.keys(meal[0]).forEach(function (key, index) {\n      if ((key === \"strMeasure\" + mCount) & (meal[0][key] !== \"\")) {\n        measurements[mCount - 1] = meal[0][key];\n        mCount++;\n      }\n\n      if ((key === \"strIngredient\" + iCount) & (meal[0][key] !== \"\")) {\n        ingredients[iCount - 1] = meal[0][key];\n        iCount++;\n      }\n    });\n\n    Object.assign(sendMeal, { Ingredients: ingredients });\n    Object.assign(sendMeal, { IngredientMeasurements: measurements });\n\n    axios\n      .post(\"http://localhost:8080/api/Meal-db-save\", sendMeal, config)\n      .then(function (response) {\n        alert(\"Meal has been saved!\");\n      })\n      .catch(function (response) {\n        //handle error\n        console.log(response);\n      });\n  }\n\n  const setTheMeal = (m) => {\n    setMeal([m]);\n  };\n\n  useEffect(() => {\n  }, [meal]);\n\n  useEffect(() => {\n    getMeals();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div className={recipeStyles.searchContainer}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"search\"\n          {...bindSearch}\n          className={recipeStyles.searchInput}\n        />\n        <button\n          type=\"submit\"\n          className={recipeStyles.searchBtn}\n          onClick={() => searchForMeals()}\n        >\n          Search\n        </button>\n      </div>\n      <div className={recipeStyles.mealListContainer}>\n        <table>\n          <thead>\n            <tr>\n              <th>Meal</th>\n              <th>catagory</th>\n            </tr>\n          </thead>\n          <tbody>\n            {meals ? (\n              meals.map(function (data, idx) {\n                return [\n                  <tr onClick={() => setTheMeal(data)} key={idx}>\n                    <td>\n                      <p>{data.strMeal}</p>\n                    </td>\n                    <td>\n                      <p>{data.strCategory}</p>\n                    </td>\n                  </tr>,\n                ];\n              })\n            ) : (\n              <div>\n                <p>No Recipes where found!</p>\n              </div>\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      <div className={recipeStyles.mealFocusContainer}>\n        {meal ? (\n          meal.map(function (data, idx) {\n            let count = 1;\n            return [\n              <form key={data.idMeal}>\n                <img\n                  src={data.strMealThumb}\n                  width=\"100%\"\n                  name=\"img\"\n                  id=\"id\"\n                  alt={data.strMeal}\n                />\n\n                <h2 className={recipeStyles.information}>{data.strMeal}</h2>\n                <p className={recipeStyles.information}>\n                  Catagory: {data.strCategory}\n                </p>\n\n                <h3 className={recipeStyles.information}>\n                  Ingredients and mesurements:\n                </h3>\n\n                {/* Excuse the hard coding below */}\n                {/* TODO: make below dynamic */}\n                <div className={recipeStyles.information}>\n                  <ul>\n                    <li>\n                      {data.strIngredient1} - {data.strMeasure1}\n                    </li>\n                    <li>\n                      {data.strIngredient2} - {data.strMeasure2}\n                    </li>\n                    <li>\n                      {data.strIngredient3} - {data.strMeasure3}\n                    </li>\n                    <li>\n                      {data.strIngredient4} - {data.strMeasure4}\n                    </li>\n                    <li>\n                      {data.strIngredient5} - {data.strMeasure5}\n                    </li>\n                    <li>\n                      {data.strIngredient6} - {data.strMeasure6}\n                    </li>\n                    <li>\n                      {data.strIngredient7} - {data.strMeasure7}\n                    </li>\n                    <li>\n                      {data.strIngredient8} - {data.strMeasure8}\n                    </li>\n                  </ul>\n                </div>\n\n                <h3 className={recipeStyles.information}>Instructions</h3>\n\n                <p className={recipeStyles.information}>\n                  {data.strInstructions}\n                </p>\n                <button\n                  type=\"button\"\n                  onClick={SaveMeal}\n                  className={recipeStyles.funcBtn}\n                >\n                  Save\n                </button>\n              </form>,\n            ];\n          })\n        ) : (\n          <div className={recipeStyles.iDiv}>\n            <h1>Please select a meal to display!</h1>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Discover;\n","/Users/jarredbaker/Desktop/repl/repl-web/src/pages/MyRecipe/MyRecipe.js",["60","61"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"../../Utilities/Header/Header\";\nimport axios from \"axios\";\n\nimport recipeStyles from \"../../css/recipe.module.css\";\n\nfunction MyRecipe() {\n  const [meal, setMeal] = useState();\n  const [meals, setMeals] = useState();\n\n  const fetchMeals = () => {\n    let token = localStorage.getItem(\"tokens\");\n    token = token.slice(1, -1);\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n\n    axios\n      .get(\"http://localhost:8080/api/GetUserRecipes\", config)\n      .then((result) => {\n        if (result.status === 200) {\n          setMeals(result.data);\n        }\n      })\n      .catch((e) => {\n        // setIsError(true);\n      });\n  };\n\n  const setTheMeal = (m) => {\n    setMeal([m]);\n  };\n\n  // Call's the getMeals function and update the dom with a state change.\n  useEffect(() => {\n    fetchMeals();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div className={recipeStyles.blackBackground}>\n        {meals ? (\n          meals.map(function (data, idx) {\n            return [\n              <div\n                key={idx}\n                className={recipeStyles.mealSummaryCard}\n                onClick={() => setTheMeal(data)}\n                key={idx}\n              >\n                <img\n                  src={data.meal_img_url}\n                  width=\"200px\"\n                  name=\"img\"\n                  id=\"id\"\n                  alt={data.strMeal}\n                />\n              </div>,\n            ];\n          })\n        ) : (\n          <div>\n            <p>You have no meals saved!</p>\n          </div>\n        )}\n      </div>\n\n      <div className={recipeStyles.divider}>\n        {meal ? (\n          meal.map(function (data, idx) {\n            let count = 1;\n            return [\n              <form key={data.meal_name}>\n                <div className={recipeStyles.dividerContain}>\n                  <h2 className={recipeStyles.information}>{data.meal_name}</h2>\n                  <p className={recipeStyles.information}>\n                    Catagory: {data.food_catagory}\n                  </p>\n\n                  <div className={recipeStyles.informationT}>\n                    <div className={recipeStyles.informationTM}>\n                      <h3>Ingredients: </h3>\n                      {data.ingredient.map(function (i) {\n                        return [\n                          <ul>\n                            <li>{i}</li>\n                          </ul>,\n                        ];\n                      })}\n                    </div>\n                    <div className={recipeStyles.informationTM}>\n                      <h3>Measurements: </h3>\n                      {data.ingredient_measurements.map(function (i) {\n                        return [\n                          <ul>\n                            <li>{i}</li>\n                          </ul>,\n                        ];\n                      })}\n                    </div>\n                  </div>\n\n                  <h3 className={recipeStyles.information}>Instructions</h3>\n\n                  <p className={recipeStyles.information}>\n                    {data.instructions}\n                  </p>\n                </div>\n              </form>,\n            ];\n          })\n        ) : (\n          <div className={recipeStyles.iDiv}>\n            <h1>Please select a meal to display!</h1>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default MyRecipe;\n","/Users/jarredbaker/Desktop/repl/repl-web/src/index.js",[],{"ruleId":"62","severity":1,"message":"63","line":2,"column":35,"nodeType":"64","messageId":"65","endLine":2,"endColumn":39},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"62","severity":1,"message":"70","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"66","replacedBy":"71"},{"ruleId":"68","replacedBy":"72"},{"ruleId":"66","replacedBy":"73"},{"ruleId":"68","replacedBy":"74"},{"ruleId":"62","severity":1,"message":"70","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"62","severity":1,"message":"75","line":11,"column":51,"nodeType":"64","messageId":"65","endLine":11,"endColumn":62},{"ruleId":"62","severity":1,"message":"76","line":145,"column":17,"nodeType":"64","messageId":"65","endLine":145,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":50,"column":17,"nodeType":"79","endLine":50,"endColumn":26},{"ruleId":"62","severity":1,"message":"76","line":72,"column":17,"nodeType":"64","messageId":"65","endLine":72,"endColumn":22},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'useEffect' is defined but never used.",["80"],["81"],["80"],["81"],"'resetSearch' is assigned a value but never used.","'count' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]